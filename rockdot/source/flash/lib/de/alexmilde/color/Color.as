package de.alexmilde.color {	/**	 * The Color class holds information about a color	 * and provides detailed infomration about that color	 * 	 * @author Alexander Milde	 * 	 */	 	public class Color 	{// ______________________________________________________________________________________________________// 																					   				 Vars//			private var _color				: uint;		private var _alphaValue			: uint;		private var _red				: uint;		private var _green				: uint;		private var _blue				: uint;							// color in Numbers 0-255					private var _redNr 				: Number;		private var _greenNr			: Number;		private var _blueNr 			: Number;				// color differences of each chanel		private	var _dRG 				: Number;		private	var _dGB 				: Number;		private	var _dBR 				: Number;				// sum of each chanel		private var _channelSum			: Number;			// ______________________________________________________________________________________________________// 																					   	 		Construct//		public function Color(clr : uint = 0xffffffff)		{			updateColor(clr);		}// ______________________________________________________________________________________________________// 																					   	  		set color//					public function get color() : uint		{			return _color;		}				public function set colorUint(color : uint) : void		{			updateColor(color);		}						public function setColorRGB(r : int, g : int, b : int) : void		{			var HEX_R : String = r.toString(16).toUpperCase();			var HEX_G : String = g.toString(16).toUpperCase();			var HEX_B : String = b.toString(16).toUpperCase();						if (HEX_R.length < 2) 			{				HEX_R = "0"+HEX_R;			}			if (HEX_G.length < 2) 			{				HEX_G = "0"+HEX_G;			}			if (HEX_B.length < 2) 			{				HEX_B = "0"+HEX_B;			}			var rgb:String = "0xff"+ HEX_R + HEX_G + HEX_B;			var color : uint = uint(rgb);			updateColor(color);		}// ______________________________________________________________________________________________________// 																					   	 Set Color Values//			private function updateColor(clr : uint) : void		{			// set color 0-255			//			_color		 	= clr;			_alphaValue 	= _color >> 24 & 0xFF;			_red 			= _color >> 16 & 0xFF;			_green			= _color >> 8 & 0xFF;			_blue			= _color & 0xFF;						_redNr			= Number(_red);			_greenNr		= Number(_green);			_blueNr			= Number(_blue);						// set chanel difference			//			_dRG			= Math.abs(_redNr - _greenNr);			_dGB			= Math.abs(_greenNr - _blueNr);			_dBR			= Math.abs(_blueNr - _redNr);					}// ______________________________________________________________________________________________________// 																					   	  Getter / Setter//						public function get redNr() : Number		{			return _redNr;		}				public function get greenNr() : Number		{			return _greenNr;		}				public function get blueNr() : Number		{			return _blueNr;		}				public function get dRG() : Number		{			return _dRG;		}				public function get dGB() : Number		{			return _dGB;		}				public function get dBR() : Number		{			return _dBR;		}		public function get channelSum() : Number		{			// set chanel sum			//			_channelSum = _redNr + _greenNr + _blueNr;						return _channelSum;		}			//////				}}