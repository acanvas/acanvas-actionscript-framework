package de.alexmilde.bmd {	import de.alexmilde.math.Sorter;	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.display.MovieClip;		/**	 * @author alexmilde	 */	public class ClipMotionAnalyser 	{		private var _clip 			: MovieClip = null;		private var _clipLength		: int = 0;		private var _clipBmp		: Bitmap = new Bitmap();		private var _motionFrameArr : Array = new Array();						public function analyseMotion() : void		{			trace(_clipLength + "--- cliplength");						if(_clip != null)			{				//				// fill the motion difference image array				//				var i : int = 1;				while(i < _clipLength)				{					_clip.gotoAndStop(i);					_clipBmp.bitmapData.draw(_clip);					_clip.gotoAndStop(i+1);					_motionFrameArr.push(BmdAnalyser.createDifferenceBmd(BmdGenerator.clipToBmd(_clipBmp), BmdGenerator.clipToBmd(_clip)));					i++;				}				_clip.gotoAndStop(1);			}			else			{				trace("no clip set");			}		}				public function set clip(clip : MovieClip) : void		{			_clipLength = clip.framesLoaded;			trace(_clipLength + "-cliplength");			_clipBmp.bitmapData = new BitmapData(clip.width, clip.height, false, 0x000000);			_clip = clip;		}						public function get motionFrameArr() : Array		{			return _motionFrameArr;		}								public function motionBitmap() : BitmapData		{			var i : int = 1;			var bmd : BitmapData = new BitmapData(_clip.width, _clip.height, true, 0x00ffffff);						while(i < _motionFrameArr.length)			{				bmd.draw(_motionFrameArr[i]);				i++;			}						return bmd;		}						public function getMotionFrameNr(mouseX : Number, mouseY : Number, currentFrame : int) : int		{			var max : int = _clipLength;			var i : int = 0;			var frames : Array = new Array();			while(i < max -1)			{				if(_motionFrameArr[i].getPixel32(mouseX, mouseY))				{					frames.push(i);				}				i++;			}								return Sorter.mostSimilar(frames, currentFrame, 3);		}	}}