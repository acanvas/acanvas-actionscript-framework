package de.alexmilde.frontend.menueBar {	/**	 * @author alexmilde	 */	public class MenueUpdater 	{		private var _model : MenueModel;		public function MenueUpdater(model : MenueModel)		{			_model = model;		}		public function setStandard() : void		{					for (var r : Number = 0;r < _model.elements.length; r++) 			{				// es gibt ein aktives element? dann unsichtbar machen 				if(MenueElement(_model.elements[r]).activeVersion == ElementState.ACTIVE)				{					// aktives elemenrt soll beim start sichtbar sein?					if(MenueElement(_model.elements[r]).startActive)					{						MenueElement(_model.elements[r]).isActive = true;					}					else					{						MenueElement(_model.elements[r]).alpha = 0;						MenueElement(_model.elements[r]).isActive = false;					}									}			}		}				public function updateClick(needle : int) : void		{			if(MenueElement(_model.elements[needle]).stateBehaviour == ElementState.STAYACTIVE)			{				// toggle element				if(MenueElement(_model.elements[needle]).isActive)				{					MenueElement(_model.elements[needle]).alpha = 0;					MenueElement(_model.elements[needle]).isActive = false;				}				else				{					MenueElement(_model.elements[needle]).alpha = 1;					MenueElement(_model.elements[needle]).isActive = true;				}			}		}				public function updateRollOver(needle : int) : void		{						if(MenueElement(_model.elements[needle]).activeVersion == ElementState.ACTIVE)			{				if(!MenueElement(_model.elements[needle]).isActive)				{					MenueElement(_model.elements[needle]).alpha = 1;					MenueElement(_model.elements[needle-1]).alpha = 0;				}				else				{					MenueElement(_model.elements[needle]).alpha = 0;					MenueElement(_model.elements[needle-1]).alpha = 1;				}							}		}		public function updateRollOut(needle : int) : void		{			if(MenueElement(_model.elements[needle]).activeVersion == ElementState.ACTIVE)			{				if(!MenueElement(_model.elements[needle]).isActive)				{					MenueElement(_model.elements[needle]).alpha = 0;					MenueElement(_model.elements[needle-1]).alpha = 1;				}				else				{					MenueElement(_model.elements[needle]).alpha = 1;					MenueElement(_model.elements[needle-1]).alpha = 0;				}			}		}				public function updatePosition() : void		{			_model.background.scaleX = _model.dimensionCurrent;						for (var i : Number = 0;i < _model.elements.length; i++) 			{				if(MenueElement(_model.elements[i]).posType == ElementState.POSLEFT)				{					MenueElement(_model.elements[i]).x = MenueElement(_model.elements[i]).pos.x;					MenueElement(_model.elements[i]).y = MenueElement(_model.elements[i]).pos.y;				}				else if(MenueElement(_model.elements[i]).posType == ElementState.POSRIGHT)				{					MenueElement(_model.elements[i]).x = _model.dimensionCurrent - (MenueElement(_model.elements[i]).pos.x + MenueElement(_model.elements[i]).width);							MenueElement(_model.elements[i]).y = MenueElement(_model.elements[i]).pos.y;				}				else if(MenueElement(_model.elements[i]).posType == ElementState.POSRELATIVE)				{					MenueElement(_model.elements[i]).x = (MenueElement(_model.elements[i]).pos.x + ((_model.dimensionCurrent - _model.dimension)/2));					MenueElement(_model.elements[i]).y = MenueElement(_model.elements[i]).pos.y;				}				else				{				}				}		}						public function updateRollOutByStr(eventName : String) : void		{			trace("do");						for (var i : Number = 0;i < _model.elements.length; i++) 			{				if(MenueElement(_model.elements[i]).dispatchStr == eventName)				{					MenueElement(_model.elements[i]).isActive = false;					MenueElement(_model.elements[i]).alpha=0;				}			}		}	}}