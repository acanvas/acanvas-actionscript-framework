package de.alexmilde.frontend.menueBar {	import flash.display.Sprite;	import flash.events.EventDispatcher;	import flash.events.MouseEvent;	/**	 * @author alexmilde	 */	public class MenueController extends EventDispatcher	{		private var _model : MenueModel;		private var _menueUpdater : MenueUpdater;		public function MenueController(model : MenueModel) : void		{			_model = model;			_menueUpdater = new MenueUpdater(_model);		}				public function addElement(elem : MenueElement) : void		{						if(elem.dispatchStr != null)			{				elem.addEventListener(MouseEvent.MOUSE_UP, elem.dispatchClick);				elem.addEventListener(MouseEvent.ROLL_OVER, elem.dispatchRollOver);				elem.addEventListener(MouseEvent.ROLL_OUT, elem.dispatchRollOut);								elem.addEventListener(elem.dispatchStr, dispatchClick);				elem.addEventListener(elem.dispatchStr + ElementState.ROLLOVER, dispatchRollOver);				elem.addEventListener(elem.dispatchStr + ElementState.ROLLOUT, dispatchRollOut);			}			_model.elements.push(elem);		}				private function dispatchClick(event : SimpleMenueEvent) : void		{			// updater aufrufen			_menueUpdater.updateClick(findObject(event.target));					}				private function dispatchRollOver(event : SimpleMenueEvent) : void		{			//trace("ControllerEvent RollOver  " + event.type);			_menueUpdater.updateRollOver(findObject(event.target));		}				private function dispatchRollOut(event : SimpleMenueEvent) : void		{			//trace("ControllerEvent RollOut  " + event.type);			_menueUpdater.updateRollOut(findObject(event.target));		}						public function setBarElements() : void		{			_menueUpdater.setStandard();			_menueUpdater.updatePosition();		}				private function findObject(needle : Object) : int		{			for (var i : Number = 0;i < _model.elements.length; i++) 			{				if(_model.elements[i] == needle)				{					return i;				}				}			return -1;		}				public function initMenue(_dimension : int, _background : Sprite) : void		{			_model.dimension = _dimension;			_model.dimensionCurrent = _dimension;			_model.background = _background;		}						public function updateMenue(stageWidth : int) : void		{			_model.dimensionCurrent = stageWidth;			_menueUpdater.updatePosition();					}						public function get menueUpdater() : MenueUpdater		{			return _menueUpdater;		}	}}