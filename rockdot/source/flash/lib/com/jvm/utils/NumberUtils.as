package com.jvm.utils {	/**	 * Copyright 2009 Jung von Matt/Neckar	 *	 * @author	Thomas Eckhardt	 * @since	15.06.2009 13:28:43	 * 	 * @version 1.1, Daniel Huebschmann	 */	public class NumberUtils {		/**		 * Gibt eine Zufallszahl eines gegebenen Zahlenbereichs zurück		 * Es gilt: min <= n < max		 * 		 * @param min		Minimaler Wert der Zufallszahl		 * @param max		Maximaler Wert der Zufallszahl (nicht einschließlich)		 * 		 * @return	int		Die generierte Zufallszahl		 */		public static function random( min : Number, max : Number ) : int {			return Math.floor(Math.random() * ( max - min ) + min);		}				/**		 * Normalisiert einen Wert eines gegebenen Bereiches		 * Bsp: ( 100, 0, 200 ) => 0.5		 * 		 * @param value		Wert der normalisiert werden soll		 * @param min		Untere Grenze des gegebenen Wertebereichs		 * @param max 		Obere Grenze des gegebenen Wertebereichs		 * 		 * @return Number	Interpolierte Wert		 */
		public static function normalize( value : Number, min : Number, max : Number ) : Number {			return ( value - min ) / ( max - min );		}				/**		 * Interpoliert einen normalisierten Wert (zwischen 0 und 1) in einen gewünschten Wertebereich		 * Bsp: ( 0.5, 0, 200 ) => 100		 * 		 * @param value		Wert der interpoliert werden soll		 * @param min		Untere Grenze des gewünschten Wertebereichs		 * @param max 		Obere Grenze des gewünschten Wertebereichs		 * 		 * @return Number	Interpolierte Wert		 */
		public static function interpolate( value : Number, min : Number, max : Number ) : Number {			return min + ( max - min ) * value;		}				/**		 * Interpoliert einen Wert eines gegebenen Wertebereichs in einen gewünschten Wertebereich		 * Bsp: ( 100, 0, 200, 2000, 4000 ) => 3000		 * 		 * @param value			Wert der interpoliert werden soll		 * @param givenMin		Untere Grenze des gegebenen Wertebereichs		 * @param givenMax 		Obere Grenze des gegebenen Wertebereichs		 * @param targetMin		Untere Grenze des gewünschten Wertebereichs		 * @param targetMax 	Obere Grenze des gewünschten Wertebereichs		 * 		 * @return Number	Interpolierte Wert		 */
		public static function map( value : Number, givenMin : Number, givenMax : Number, targetMin : Number, targetMax : Number ) : Number {			return interpolate(normalize(value, givenMin, givenMax), targetMin, targetMax);		}				/**		* Formats a number to include a leading zero if it is a single digit between -1 and 10. 			* For Example: 0 -> 00, 1 -> 01 			* 		* @param value 			The number that will be formatted		*		* @return String		A string with single digits between -1 and 10 padded with a leading zero.		*		*/				public static function addLeadingZero(value : Number) : String {			var out : String = String(value);			if(value < 10 && value > -1) {				out = "0" + out;			}			return out;		}		}}