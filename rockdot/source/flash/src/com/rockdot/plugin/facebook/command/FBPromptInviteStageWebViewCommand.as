package com.rockdot.plugin.facebook.command {	import com.hurlant.util.Base64;	import com.rockdot.core.model.RockdotConstants;	import com.rockdot.core.mvc.RockdotEvent;	import com.rockdot.plugin.facebook.airhack.AIRInviteWindow;	import com.rockdot.plugin.facebook.command.event.vo.VOFBInvite;	import com.rockdot.plugin.screen.common.inject.ScreenServiceAware;	import com.rockdot.plugin.screen.common.service.IScreenService;	import com.rockdot.plugin.ugc.command.event.UGCEvents;	import flash.geom.Rectangle;	import flash.media.StageWebView;	public class FBPromptInviteStageWebViewCommand extends AbstractFBCommand implements ScreenServiceAware{		protected static const LAYER_WIDTH_MAX : int = 480;		protected static const LAYER_HEIGHT_MAX : int = 600;				private var _window : AIRInviteWindow;		private var _uiService : IScreenService;		private var _data : String;		override public function execute(event : RockdotEvent = null) : * {			super.execute(event);						//http://developers.facebook.com/docs/reference/dialogs/requests/						var vo : VOFBInvite = event.data;			var reason : String = vo.reason ? vo.reason : RockdotConstants.VAR_REASON_VALUE_APPREQUEST_VIEW;						//assemble data payload as query string. 			//supported pairs: item_id=X OR item_container_id=Y			_data = Base64.encode( event.data.data + "&reason=" + reason + "&uid=" + _fbModel.user.uid);									// XXX The window size calculation of the Facebook lib is buggy			var rw : int = Math.min(LAYER_WIDTH_MAX, RockdotConstants.WIDTH_STAGE - 20);			var rh : int = Math.min(LAYER_HEIGHT_MAX, RockdotConstants.HEIGHT_STAGE - 20);			var rx : int = _uiService.stage.stageWidth / 2 - rw / 2;			var ry : int = _uiService.stage.stageHeight / 2 - rh / 2;			_window = new AIRInviteWindow(_onRequestSent, _uiService.stage);			_window.open(							getProperty("project.facebook.appid")							, new StageWebView()							, new Rectangle(rx, ry, rw, rh)							, getProperty("project.facebook.invite.redirect.url")							, event.data.message							, _data							, event.data.title							, vo.max_recipients						);		}		private function _onRequestSent(success : Object, fail : Object) : void {			if(success){				var object : Object = new Object();				object.request = success.request;				object.data = _data;				object.uid = _fbModel.user.uid;				object.to_ids = success["to[0]"];							new RockdotEvent(UGCEvents.TRACK_INVITE, object, dispatchCompleteEvent).dispatch();				dispatchCompleteEvent(success);			}			if(fail){				dispatchErrorEvent(fail);			}		}		public function set uiService(uiService : IScreenService) : void {			_uiService = uiService;		}	}}