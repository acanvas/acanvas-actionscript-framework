package com.rockdot.plugin.facebook.command {	import com.facebook.graph.Facebook;	import com.facebook.graph.data.FacebookSession;	import com.rockdot.core.model.RockdotConstants;	import com.rockdot.core.mvc.RockdotEvent;	import com.rockdot.plugin.facebook.command.event.FBEvents;	public class FBInitBrowserCommand extends AbstractFBCommand {		override public function execute(event : RockdotEvent = null) : * {			super.execute(event);  						if(RockdotConstants.LOCAL) {				log.debug("Facebook Not Supported here.");				dispatchCompleteEvent();			} else {				Facebook.init(getProperty("project.facebook.appid"), _handleComplete);			}		}		private function _handleComplete(response : Object, fail : Object = null) : void {			if (response != null && response.accessToken != null) {				_fbModel.userIsAuthenticated = true;				_fbModel.session = response as FacebookSession;								new RockdotEvent(FBEvents.USER_GETINFO_PERMISSIONS, null, _onPermissions).dispatch();								return;			}			if(fail){				log.debug("FB Init did not produce a valid access token: {1} (code: {2}, type: {3})", [fail.error.message, fail.error.code, fail.error.type]);				dispatchErrorEvent(fail.error);			}			else{				log.debug("FB Init did not produce any result.");				dispatchCompleteEvent();			}		}		private function _onPermissions(perms : Array) : void {			dispatchCompleteEvent(_fbModel.session);		}	}}